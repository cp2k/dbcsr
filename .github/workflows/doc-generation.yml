---
name: Generating documentation
on:
  push:
    branches:
    - 'develop'
    tags:
    - 'v*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cp2k/dbcsr-build-env-ubuntu-20.04:develop

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true

    - name: Configure
      run: |
        mkdir -p build
        cd build
        cmake -G Ninja \
          -DUSE_MPI=ON \
          -DUSE_OPENMP=ON \
          -DUSE_SMM=libxsmm \
          -DMPI_EXECUTABLE_SUFFIX=.mpich \
          ..

    - name: Build
      run: |
        cmake --build build -- doc
        touch build/doc/.nojekyll

    - name: Setup SSH agent ðŸ”‘
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.SSH_DEPLOY_KEY }}

    # workaround for https://github.com/webfactory/ssh-agent/issues/20
    - name: Add Github host keys to the SSH configuration inside the container
      run: |
        mkdir -p /root/.ssh
        ssh-keyscan -t rsa github.com >> /root/.ssh/known_hosts

    - name: Deploy Development Documentation
      if: github.repository == 'cp2k/dbcsr' && github.ref == 'refs/heads/develop'
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        SSH: true
        BRANCH: gh-pages
        FOLDER: build/doc
        TARGET_FOLDER: develop
        CLEAN: true
        CLEAN_EXCLUDE: '["releases"]'

    - name: Get the release version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      shell: bash

    - name: Deploy Release Documentation
      if: github.repository == 'cp2k/dbcsr' && contains(github.ref, 'tags')
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        SSH: true
        ACCESS_TOKEN: ${{ secrets.GHPAGES_ACCESS_TOKEN }}
        BRANCH: gh-pages
        FOLDER: build/doc
        TARGET_FOLDER: 'releases/v${{ steps.get_version.outputs.VERSION }}'

#  vim: set ts=2 sw=2 tw=0 :
