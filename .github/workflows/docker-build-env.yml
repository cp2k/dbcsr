---
name: Publish DBCSR Build Environments to the GitHub Contrainer Registry

on:
  push:
    branches:
    - 'develop'
    paths:
    - 'tools/docker/**'
    - '.github/workflows/docker-build-env.yml'
  schedule:  # runs on the last commit of the repo's default branch
    - cron: '45 23 * * *'
  workflow_dispatch:

jobs:
  docker-build-env:
    runs-on: ubuntu-latest
    if: github.repository == 'cp2k/dbcsr' # Only run from main repo
    strategy:
      matrix:
        include:
          - docker_image: ghcr.io/cp2k/dbcsr-build-env-ubuntu-22.04
            context: tools/docker
            file: Dockerfile.build-env-ubuntu
            registry: ghcr.io
          - docker_image: ghcr.io/cp2k/dbcsr-build-env-latest-gcc
            context: tools/docker
            file: Dockerfile.build-env-latest-gcc
            registry: ghcr.io
          - docker_image: ghcr.io/cp2k/dbcsr-build-env-rocm
            context: tools/docker
            file: Dockerfile.build-env-rocm
            registry: ghcr.io
          - docker_image: ghcr.io/cp2k/dbcsr-build-env-ubuntu-22.04-cuda
            context: tools/docker
            file: Dockerfile.build-env-ubuntu-cuda
            registry: ghcr.io

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ matrix.docker_image }}
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ matrix.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/${{ matrix.file }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
