# npcols MPI grid, 0 leaves MPI to find the best grid.
# Note that the total number of processors must be divisible per npcols
0
# Use MPI-RMA
F
# operation
dbcsr_multiply
# matrix sizes (M, N, K)
2208
2208
2208
# sparsity (A, B, C)
0.2d0
0.2d0
0.2d0
# transposes
N
N
# symmetries
N
N
N
# data type
3
# alpha (real, imag)
1.0d0
0.0d0
# beta (real, imag)
1.0d0
0.0d0          
# limits (0 means full size)
# row
0
0
# col
0
0
# k
0
0
# retain sparsity (T/F)
F
# number of repetitions
50
# number of different blocks to read (m, n, k)
1
1
1
# the m blocks (multiplicity, block size, ...)
1
23
# the n blocks (multiplicity, block size, ...)
1
23
# the k blocks (multiplicity, block size, ...)
1
23
# checksum (check, threshold, references)
F
0.
0.
0.
