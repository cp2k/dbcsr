FROM ubuntu:22.04

# we need at least Ubuntu 19.10 for:
#   git > 2.18
#   lcov > 1.13
#   openmpi > 2.1
# we need at least Ubuntu 20.04 for:
#   ninja >= 1.10
#   an OpenBLAS built with OpenMP-support

ENV DEBIAN_FRONTEND=noninteractive

RUN set -ex ; \
    apt-get update ; \
    apt-get install -y \
        apt-transport-https \
        ca-certificates \
        gnupg \
        software-properties-common \
        curl \
        ; \
    curl -LsS https://apt.kitware.com/keys/kitware-archive-latest.asc \
        | gpg --dearmor - \
        | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null ; \
    apt-add-repository 'deb https://apt.kitware.com/ubuntu/ jammy main' ; \
    apt-get install -y \
        locales \
        gfortran \
        g++ \
        openmpi-bin \
        libopenmpi-dev \
	mpich \
	libmpich-dev \
        libopenblas-openmp-dev \
        cmake \
        ninja-build \
        lcov \
        pkg-config \
        git \
        python3-pip \
        unzip \
        rsync \
        valgrind \
        ; \
    rm -rf /var/lib/apt/lists/* ; \
    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

# Make sure we have a proper unicode locale and language
ENV LANG en_US.utf8

RUN set -ex ; \
    pip3 install \
        pre-commit \
        ford \
        git-archive-all \
        ;

ARG libxsmm_version=6e6e718566679c73e248902e68f02683feca1885

RUN set -ex ; \
    curl -LsS https://github.com/libxsmm/libxsmm/archive/${libxsmm_version}.tar.gz | tar -xz -C /opt ; \
    ln -s libxsmm-${libxsmm_version} /opt/libxsmm ; \
    make -j -C /opt/libxsmm WRAP=0

ENV PKG_CONFIG_PATH="/opt/libxsmm/lib:${PKG_CONFIG_PATH}"

# Remove LTO for MPICH (default now in Ubuntu >=22)
RUN set -ex ; \
    for ff in /usr/lib/x86_64-linux-gnu/pkgconfig/mpich.pc /usr/bin/mpicc.mpich /usr/bin/mpicxx.mpich /usr/bin/mpif77.mpich /usr/bin/mpif90.mpich /usr/bin/mpifort.mpich; do \
    	sed -i -e 's/-flto=auto//g' -e 's/-ffat-lto-objects//g' ${ff}; \
    done

# Leak suppression
COPY lsan.supp /opt
ENV LSAN_OPTIONS=suppressions=/opt/lsan.supp
