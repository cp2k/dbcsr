language: c

os:
  - linux
  - osx

dist: xenial
osx_image: xcode11.2

addons:
  apt:
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - libopenmpi-dev
    - openmpi-bin
    - lcov
  homebrew:
    packages:
    - gcc
    - cmake
    - openmpi
    update: true

cache:
  pip: true
  directories:
  - $HOME/deps
  - $HOME/Library/Caches/Homebrew

env:
  global:
  - LIBXSMM_VERSION=1.14
  - CMAKE_VERSION=3.10.3
  matrix:
  - USE_MPI=ON USE_OPENMP=ON USE_SMM=blas
  - USE_MPI=OFF USE_OPENMP=ON USE_SMM=blas
  - USE_MPI=ON USE_OPENMP=OFF USE_SMM=blas
  - USE_MPI=OFF USE_OPENMP=OFF USE_SMM=blas
  - USE_MPI=OFF USE_OPENMP=ON USE_SMM=libxsmm
  - USE_MPI=OFF USE_OPENMP=OFF USE_SMM=libxsmm

matrix:
  include:
    - os: linux
      python: 3.6

matrix:
  exclude:
    - os: osx
      env: USE_MPI=ON USE_OPENMP=ON USE_SMM=blas
    - os: osx
      env: USE_MPI=OFF USE_OPENMP=ON USE_SMM=blas
    - os: osx
      env: USE_MPI=OFF USE_OPENMP=ON USE_SMM=libxsmm

install:
  # Update cmake to the minimal required version (shamelessly copied from the boost travis config):
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    LIBXSMM_URL="https://github.com/hfp/libxsmm/archive/${LIBXSMM_VERSION}.tar.gz"
    LIBXSMM_DIR="libxsmm-${LIBXSMM_VERSION}"
    if [[ ! -e "${LIBXSMM_DIR}" ]] ; then
      rm -rf libxsmm-*
      mkdir "${LIBXSMM_DIR}"
      travis_retry wget --no-check-certificate --quiet -O - ${LIBXSMM_URL} | tar --strip-components=1 -xz -C "${LIBXSMM_DIR}"
      make -C "${LIBXSMM_DIR}" -j
    fi
    export PKG_CONFIG_PATH=${DEPS_DIR}/${LIBXSMM_DIR}/lib
  - pkg-config libxsmm --exists

before_script:
  # make sure we are back into the top directory again
  - cd "${TRAVIS_BUILD_DIR}"
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ] ; then
      # ensure python 3.6.4+ on Linux for deployment, pre-commit checks and doc generation
      pyenv global 3.6.7 2.7.15
      pip install git-archive-all pre-commit ford
    fi

script:  # multiplied by matrix envs and os settings
  - mkdir -p build
  - cd build
  # C++ example fails with this ancient version of MPI,
  # we see all system CPUs, but can use only 1, causing nproc auto-detection to fail
  - cmake -DCMAKE_BUILD_TYPE=Coverage -DTEST_MPI_RANKS=1  -DUSE_MPI=$USE_MPI -DUSE_OPENMP=$USE_OPENMP -DUSE_SMM=$USE_SMM ..
  - make VERBOSE=1 -j
  - make CTEST_OUTPUT_ON_FAILURE=1 test

jobs:  # the following jobs inherit only the first OS
  include:
  - name: "Build and test MPI+OpenMP version with make"
    script:
    - make -j FC="mpif90" LD="mpif90" OPTFLAGS="-O0 -g --coverage" FYPPFLAGS="--line-numbering --line-marker-format=gfortran5" CHECKS=1 LEAKS=0 all
    - make test
    - lcov --directory . --capture --output-file coverage.info
    # remove any system headers, 3rd party objects and the test code itself from the coverage report
    # the absolute path is required to workaround an issue in lcov which makes it change its CWD in case of errors
    - lcov --remove coverage.info '/usr/*' "${HOME}"'/deps/*' '*/tests/*' --output-file "${TRAVIS_BUILD_DIR}/coverage.info"
    - lcov --list coverage.info
    - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
  - name: "Run pre-commit hook on changed files"
    if: tag IS NOT present
    script:
    - set -o pipefail
    # fetch remotes first to ensure that referenced branches (other than the default) are available
    - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
    - git fetch
    - git diff --name-only --diff-filter=AM HEAD "origin/${TRAVIS_BRANCH}" | xargs pre-commit run --files

  - name: "Run pre-commit hook 'check-ast' on all files"
    if: tag IS NOT present
    script:
    - pre-commit run --hook-stage manual --all-files check-ast
  - stage: release
    name: "Build release tarball and documentation and deploy to GitHub"
    if: tag IS present
    script:
      - mkdir -p build
      - cd build
      - cmake ..
      - make dist doc
      - touch doc/.nojekyll
    deploy:
    - provider: releases
      api_key:  # encrypted token of the `dbcsr` GitHub service user
        secure: ID+AX1LOPs+BRGpZiYgP0H9gvOBF/a/o1tNUNDY7Mbo6uShpwVcmYxpqW/2zbWrHXeG4TNZEATED2Yw1nSSp0wj7z/t6ScDuttvYwuN8AExauW7y4WrU5o3qGCGuc9ClDmj3lnQsjqjkmFkqZasmnh2MKHldcDM5cluNs1o/48a/nJ55TEsplKvsPn6gzi+XIs0zY/yIFEZxWEeXs7SlR3Jr+0nDMBHdllnEV/AxdQGQ7y2w6sXN26B7PZNM97kQ8qBGUPnnj41vHtAvT1rGu/N7TcRu+P0n9JmPtC+ZpzBNU8RfI0YJgFOjhORP9gwUNrwNSLZBqJECo2+s6QhjZ7x+UVF9CBQePUnRPJxMjkFVKqfykd7NtREaFJiwwfcWXSq7naVj1n4aNN19jO1myeSP/4WAGMBmEHXSlaDj1jqyaijwPC9YxVeMovTwlDdg0Iv/ZsjE4+MFcgyUU8f0h5x94gbsxgmKPUMaQeuMhdw41wAQm0KcDANwWNyiiGiyw5h0QJcjvg1/HDsrfID0vgqXXMXCfbLEMwpJLWj8F5Htc/D2gGfvepLy9+chqGF/53ntpTPEkF9V1f8ke6QZv7cJhi7U7IOmxWE6OFObPB1auT6g+Got10zkzNDWulk7g6thIFZlarpYqVKUWMfhb3i0ndJLk24L6iJhRuxtp90=
      skip_cleanup: true
      file_glob: true
      file: dist/*
      draft: true
      # the following 2 lines work around an issue in TravisCI with draft=true:
      tag_name: $TRAVIS_TAG
      target_commitish: $TRAVIS_COMMIT
      on:
        repo: cp2k/dbcsr
        tags: true  # default is "restricted by branch"
    - provider: pages
      github-token:  # encrypted token of the `dbcsr` GitHub service user
        secure: ID+AX1LOPs+BRGpZiYgP0H9gvOBF/a/o1tNUNDY7Mbo6uShpwVcmYxpqW/2zbWrHXeG4TNZEATED2Yw1nSSp0wj7z/t6ScDuttvYwuN8AExauW7y4WrU5o3qGCGuc9ClDmj3lnQsjqjkmFkqZasmnh2MKHldcDM5cluNs1o/48a/nJ55TEsplKvsPn6gzi+XIs0zY/yIFEZxWEeXs7SlR3Jr+0nDMBHdllnEV/AxdQGQ7y2w6sXN26B7PZNM97kQ8qBGUPnnj41vHtAvT1rGu/N7TcRu+P0n9JmPtC+ZpzBNU8RfI0YJgFOjhORP9gwUNrwNSLZBqJECo2+s6QhjZ7x+UVF9CBQePUnRPJxMjkFVKqfykd7NtREaFJiwwfcWXSq7naVj1n4aNN19jO1myeSP/4WAGMBmEHXSlaDj1jqyaijwPC9YxVeMovTwlDdg0Iv/ZsjE4+MFcgyUU8f0h5x94gbsxgmKPUMaQeuMhdw41wAQm0KcDANwWNyiiGiyw5h0QJcjvg1/HDsrfID0vgqXXMXCfbLEMwpJLWj8F5Htc/D2gGfvepLy9+chqGF/53ntpTPEkF9V1f8ke6QZv7cJhi7U7IOmxWE6OFObPB1auT6g+Got10zkzNDWulk7g6thIFZlarpYqVKUWMfhb3i0ndJLk24L6iJhRuxtp90=
      skip-cleanup: true
      keep-history: true
      local-dir: build/doc/
      on:
        repo: cp2k/dbcsr
        tags: true  # default is "restricted by branch"
