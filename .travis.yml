language: c

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gfortran
      - libblas-dev
      - liblapack-dev
      - libopenmpi-dev
      - openmpi-bin

install:
  # Update cmake to the minimal required version (shamelessly copied from the boost travis config):
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version

before_script:
  # make sure we are back into the top directory again
  - cd "${TRAVIS_BUILD_DIR}"

jobs:
  include:
    - stage: build
      name: "Build and test MPI+OpenMP version with make"
      script:
        - make -j FC="mpif90" LD="mpif90" OPTFLAGS="-fprofile-arcs -ftest-coverage -O0 -D__MPI_VERSION=2" all
        - make test
        - bash <(curl -s https://codecov.io/bash)
    - # run this in parallel with the other builds
      name: "Build and test MPI+OpenMP version with cmake"
      script:
        - mkdir -p build
        - cd build
        # C++ example fails with this ancient version of MPI,
        # we see all system CPUs, but can use only 1, causing nproc auto-detection to fail
        - cmake -DCMAKE_BUILD_TYPE=Coverage -DWITH_EXAMPLES=OFF -DTEST_MPI_RANKS=1 ..
        - make -j
        - make CTEST_OUTPUT_ON_FAILURE=1 test
    - # run this in parallel with the other builds
      name: "Build and test OpenMP version with cmake"
      script:
        - mkdir -p build
        - cd build
        # all examples need MPI atm
        - cmake -DCMAKE_BUILD_TYPE=Coverage -DUSE_MPI=OFF -DWITH_EXAMPLES=OFF ..
        - make -j
        - make CTEST_OUTPUT_ON_FAILURE=1 test
    - # run this in parallel with the other builds
      name: "Build and test MPI version with cmake"
      script:
        - mkdir -p build
        - cd build
        # all examples need MPI atm
        - cmake -DCMAKE_BUILD_TYPE=Coverage -DUSE_OPENMP=OFF -DWITH_EXAMPLES=OFF -DTEST_MPI_RANKS=1 ..
        - make -j
        - make CTEST_OUTPUT_ON_FAILURE=1 test
